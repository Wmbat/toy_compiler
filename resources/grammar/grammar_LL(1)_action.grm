<AParams> ::= <Expr> <AParamsTail> 
<AParams> ::= EPSILON (Epsilon) 

<AParamsTail> ::= ',' <Expr> <AParamsTail> 
<AParamsTail> ::= EPSILON  (Epsilon)

<AddOp> ::= '+' 
<AddOp> ::= '-' 
<AddOp> ::= 'or' 

<ArithExpr> ::= <Term> <ArithExprTail> 

<ArithExprTail> ::= <AddOp> (ActionIdDecl) <Term> (ActionAddOp) <ArithExprTail> 
<ArithExprTail> ::= EPSILON 

<ArraySizeRept> ::= '[' <IntNum> ']' <ArraySizeRept> 
<ArraySizeRept> ::= EPSILON 

<AssignOp> ::= 'assign' 

<AssignStatTail> ::= <AssignOp> (IdDecl) <Expr> (AssignOp)

<ClassDecl> ::= 'class' (LocationDecl) 'id' (IdDecl) <Inherit> '{' <ClassDeclBody> (CompoundMemberDecl) '}' ';' <ClassDecl> 
<ClassDecl> ::= EPSILON 

<ClassDeclBody> ::= <Visibility> <MemberDecl> <ClassDeclBody> 
<ClassDeclBody> ::= EPSILON 

<ClassMethod> ::= 'sr' 'id' 
<ClassMethod> ::= EPSILON 

<Expr> ::= <ArithExpr> <ExprTail> 

<ExprTail> ::= <RelOp> (ActionIdDecl) <ArithExpr> (ActionRelOp)
<ExprTail> ::= EPSILON 

<FParams> ::= <Type> 'id' <ArraySizeRept> <FParamsTail> 
<FParams> ::= EPSILON 

<FParamsTail> ::= ',' <Type> 'id' <ArraySizeRept> <FParamsTail> 
<FParamsTail> ::= EPSILON 

<Factor> ::= <FuncOrVar>
<Factor> ::= 'intnum' (IntExpr)
<Factor> ::= 'floatnum' (FloatExpr)
<Factor> ::= 'stringlit' (StrExpr)
<Factor> ::= '(' (location) <Expr> ')' (PriorityExpr)
<Factor> ::= 'not' (id) <Factor> (NotExpr)
<Factor> ::= <Sign> (sign) <Factor> (SignExpr)
<Factor> ::= 'qm' (location) '[' <Expr> ':' <Expr> ':' <Expr> ']' (QmExpr)

<FuncBody> ::= '{' <MethodBodyVar> <StatementList> (CompoundStmt)'}' 

<FuncDecl> ::= 'func' 'id' '(' <FParams> ')' ':' <FuncDeclTail> ';' 

<FuncDeclTail> ::= <Type> 
<FuncDeclTail> ::= 'void' 

<FuncDef> ::= <Function> <FuncDef> 
<FuncDef> ::= EPSILON 

<FuncHead> ::= 'func' 'id' <ClassMethod> '(' <FParams> ')' ':' <FuncDeclTail> 

<FuncOrAssignStat> ::= 'id' (IdDecl) <FuncOrAssignStatIdnest> 

<FuncOrAssignStatIdnest> ::= <IndiceRep> (CompoundArrayIndexAccessDecl) (VarExpr) (DotOp) <FuncOrAssignStatIdnestVarTail> 
<FuncOrAssignStatIdnest> ::= '(' <AParams> ')' (CompoundParameterExprDecl) (FuncExpr) (DotOp) <FuncOrAssignStatIdnestFuncTail> 

<FuncOrAssignStatIdnestFuncTail> ::= '.' (DotDecl) 'id' (IdDecl) <FuncStatTail> 
<FuncOrAssignStatIdnestFuncTail> ::= EPSILON (FuncStmt)

<FuncOrAssignStatIdnestVarTail> ::= '.' (DotDecl) 'id' (IdDecl) <FuncOrAssignStatIdnest> 
<FuncOrAssignStatIdnestVarTail> ::= <AssignStatTail> (AssignStmt)

<FuncOrVar> ::= 'id' (IdDecl) <FuncOrVarIdnest> 

<FuncOrVarIdnest> ::= <IndiceRep> (CompoundArrayIndexAccessDecl) (VarExpr) (DotOp) <FuncOrVarIdnestTail> 
<FuncOrVarIdnest> ::= '(' <AParams> ')' (CompoundParameterExprDecl) (FuncExpr) (DotOp) <FuncOrVarIdnestTail> 

<FuncOrVarIdnestTail> ::= '.' (IdDecl) 'id' (IdDecl) <FuncOrVarIdnest> 
<FuncOrVarIdnestTail> ::= EPSILON 

<FuncStatTail> ::= <IndiceRep> (CompoundArrayIndexAccessDecl) (VarExpr) (DotOp) '.' (DotDecl) 'id' (IdDecl) <FuncStatTail> 
<FuncStatTail> ::= '(' <AParams> ')' (CompoundParameterExprDecl) (FuncExpr) (DotOp) <FuncStatTailIdnest> 

<FuncStatTailIdnest> ::= '.' (DotDecl) 'id' (IdDecl) <FuncStatTail> 
<FuncStatTailIdnest> ::= EPSILON (FunctionStmt)

<Function> ::= <FuncHead> <FuncBody> 

<IndiceRep> ::= '[' <Expr> ']' (ArrayIndexAccessDecl) <IndiceRep> 
<IndiceRep> ::= EPSILON (Epsilon)

<Inherit> ::= 'inherits' 'id' <NestedId> 
<Inherit> ::= EPSILON 

<NestedId> ::= ',' 'id' <NestedId> 
<NestedId> ::= EPSILON 

<IntNum> ::= 'intnum' 
<IntNum> ::= EPSILON 

<MemberDecl> ::= <FuncDecl> (MemberFuncDecl)
<MemberDecl> ::= <VarDecl> (MemberVarDecl) (MemberDecl)

<MethodBodyVar> ::= 'var' '{' <VarDeclRep> '}' 
<MethodBodyVar> ::= EPSILON 

<MultOp> ::= '*' 
<MultOp> ::= '/' 
<MultOp> ::= 'and' 

<Prog> ::= <ClassDecl> <FuncDef> 'main' <FuncBody> 

<RelOp> ::= 'eq' 
<RelOp> ::= 'neq' 
<RelOp> ::= 'lt' 
<RelOp> ::= 'gt' 
<RelOp> ::= 'leq' 
<RelOp> ::= 'geq' 

<START> ::= <Prog> 

<Sign> ::= '+' 
<Sign> ::= '-' 

<StatBlock> ::= '{' <StatementList> (CompoundStmt) '}' 
<StatBlock> ::= <Statement>
<StatBlock> ::= EPSILON (Epsilon)

<Statement> ::= <FuncOrAssignStat> ';' 
<Statement> ::= 'if' (LocationDecl) '(' <Expr> ')' 'then' <StatBlock> (StmtBlockDecl) 'else' <StatBlock> (StmtBlockDecl) (IfStmt) ';' 
<Statement> ::= 'while' (LocationDecl) '(' <Expr> ')' <StatBlock> (StmtBlockDecl) (WhileStmt) ';' 
<Statement> ::= 'read' (locationDecl) '(' <Variable> (CompoundVarExpr) ')' (ReadStmt) ';' 
<Statement> ::= 'write' '(' <Expr> ')' (WriteStmt) ';' 
<Statement> ::= 'return' '(' <Expr> ')' (ReturnStmt) ';' 
<Statement> ::= 'break' (BreakStmt) ';' 
<Statement> ::= 'continue' (ContinueStmt) ';' 

<StatementList> ::= <Statement> <StatementList> 
<StatementList> ::= EPSILON 

<Term> ::= <Factor> <TermTail> 

<TermTail> ::= <MultOp> (ActionIdDecl) <Factor> (ActionMultOp) <TermTail> 
<TermTail> ::= EPSILON

<Type> ::= 'integer' 
<Type> ::= 'float' 
<Type> ::= 'string' 
<Type> ::= 'id' 

<VarDecl> ::= <Type> 'id' <ArraySizeRept> ';' 

<VarDeclRep> ::= <VarDecl> <VarDeclRep> 
<VarDeclRep> ::= EPSILON 

<Variable> ::= 'id' (IdDecl) <VariableIdnest> 

<VariableIdnest> ::= <IndiceRep> (CompoundArrayIndexAccessDecl) (VarExpr) <VariableIdnestTail> 

<VariableIdnestTail> ::= '.' 'id' (IdDecl) <VariableIdnest> 
<VariableIdnestTail> ::= EPSILON 

<Visibility> ::= 'public' (VisibilityDecl)
<Visibility> ::= 'private' (VisibilityDecl)
<Visibility> ::= EPSILON (Epsilon)


